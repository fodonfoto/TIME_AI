import express from 'express';

const router = express.Router();

// Question classifier using GPT-5 Mini
async function classifyQuestion(userMessage) {
  const classifierPrompt = [
    {
      role: 'system',
      content: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô TIME AI classifier ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ô‡∏™‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏µ‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô:
1. "general" - ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
2. "research" - ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô
3. "coding" - ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Design, Programming, Development, Code, ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç bug, ‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß code, ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°`
    },
    {
      role: 'user',
      content: userMessage
    }
  ];

  const classification = await puter.ai.chat(classifierPrompt, {
    model: 'gpt-5-mini',
    max_tokens: 10
  });

  return classification.toLowerCase().trim();
}

// Enhanced response with research sources
async function getResearchResponse(messages) {
  const response = await puter.ai.chat([
    {
      role: 'system',
      content: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI researcher ‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ô‡∏ö‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á

‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö:
- ‡πÉ‡∏ä‡πâ headers (## ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å, ### ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏¢‡πà‡∏≠‡∏¢) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á
- ‡πÉ‡∏ä‡πâ bullet points (-) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
- ‡πÉ‡∏ä‡πâ **‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤** ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
- ‡πÉ‡∏ä‡πâ \`inline code\` ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö technical terms
- ‡πÉ‡∏ä‡πâ code blocks (\`\`\`) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö code examples
- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°`
    },
    ...messages
  ], {
    model: 'gpt-5-mini',
    max_tokens: 3000
  });

  return response + '\n\n## üìö ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á\n\n- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å **GPT-5 Mini Knowledge Base**\n- ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡∏à‡∏≤‡∏Å **AI Reasoning**\n- ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö **Real-time**';
}

// Coding response with Claude-4
async function getCodingResponse(messages) {
  return await puter.ai.chat([
    {
      role: 'system',
      content: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô expert developer ‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏î‡πâ‡∏≤‡∏ô Design ‡πÅ‡∏•‡∏∞ Coding ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î

‡∏Å‡∏é‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç - ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏™‡∏°‡∏≠:
1. ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ code ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ code blocks ‡∏î‡πâ‡∏ß‡∏¢ \`\`\` ‡πÄ‡∏™‡∏°‡∏≠
2. ‡∏£‡∏∞‡∏ö‡∏∏‡∏†‡∏≤‡∏©‡∏≤‡∏´‡∏•‡∏±‡∏á \`\`\` ‡πÄ‡∏ä‡πà‡∏ô \`\`\`javascript, \`\`\`python, \`\`\`css
3. ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏™‡πà code ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ code blocks

‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö:
- ‡πÉ‡∏ä‡πâ headers (## ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å, ### ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏¢‡πà‡∏≠‡∏¢) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á
- ‡πÉ‡∏ä‡πâ bullet points (-) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô
- ‡πÉ‡∏ä‡πâ **‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤** ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠ functions
- ‡πÉ‡∏ä‡πâ \`inline code\` ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö variable names ‡πÅ‡∏•‡∏∞ technical terms
- ‡πÉ‡∏ä‡πâ code blocks ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏∏‡∏†‡∏≤‡∏©‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô \`\`\`javascript ‡∏´‡∏£‡∏∑‡∏≠ \`\`\`python
- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏° technical
- ‡πÉ‡∏´‡πâ code examples ‡∏ó‡∏µ‡πà copy ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
- ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ best practices ‡πÅ‡∏•‡∏∞ common pitfalls

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ code blocks ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:

\`\`\`javascript
const authHeader = req.headers.authorization;
if (!authHeader || !authHeader.startsWith('Bearer ')) {
  return res.status(401).json({ error: 'Missing or invalid Authorization header' });
}
\`\`\`

\`\`\`python
def validate_input(data):
    if not data:
        raise ValueError("Data cannot be empty")
    return True
\`\`\`

‡∏´‡πâ‡∏≤‡∏°‡∏ó‡∏≥: ‡πÉ‡∏™‡πà code ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ const example = 'wrong'
‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥: ‡πÉ‡∏™‡πà code ‡πÉ‡∏ô code blocks ‡πÄ‡∏™‡∏°‡∏≠`
    },
    ...messages
  ], {
    model: 'claude-sonnet-4',
    max_tokens: 4000
  });
}

router.post('/', async (req, res) => {
  try {
    const { messages } = req.body;
    const lastMessage = messages[messages.length - 1];
    
    if (!lastMessage || lastMessage.role !== 'user') {
      return res.status(400).json({ error: 'Invalid message format' });
    }

    // Step 1: Classify question type
    const questionType = await classifyQuestion(lastMessage.content);
    console.log('Question classified as:', questionType);

    let response;

    // Step 2: Route to appropriate model
    if (questionType.includes('general')) {
      // General questions -> GPT-5 Mini with formatting
      response = await puter.ai.chat([
        {
          role: 'system',
          content: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI assistant ‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå

‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö:
- ‡πÉ‡∏ä‡πâ headers (## ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å, ### ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏¢‡πà‡∏≠‡∏¢) ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡πÉ‡∏ä‡πâ bullet points (-) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
- ‡πÉ‡∏ä‡πâ **‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤** ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°`
        },
        ...messages
      ], {
        model: 'gpt-5-mini',
        max_tokens: 2000
      });
    } else if (questionType.includes('research')) {
      // Research questions -> GPT-5 Mini with enhanced response
      response = await getResearchResponse(messages);
    } else if (questionType.includes('coding')) {
      // Coding questions -> Claude-4 with code blocks
      response = await getCodingResponse(messages);
      console.log('Coding response from Claude:', response.substring(0, 500) + '...');
    } else {
      // Fallback to general with formatting
      response = await puter.ai.chat([
        {
          role: 'system',
          content: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI assistant ‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå

‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö:
- ‡πÉ‡∏ä‡πâ headers (## ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å, ### ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏¢‡πà‡∏≠‡∏¢) ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- ‡πÉ‡∏ä‡πâ bullet points (-) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
- ‡πÉ‡∏ä‡πâ **‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤** ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°`
        },
        ...messages
      ], {
        model: 'gpt-5-mini',
        max_tokens: 2000
      });
    }

    // Debug: Log response format
    console.log('Final response preview:', response.substring(0, 200) + '...');
    console.log('Contains code blocks:', response.includes('```'));

    res.json({
      choices: [{
        message: {
          role: 'assistant',
          content: response
        }
      }],
      metadata: {
        questionType,
        modelUsed: questionType.includes('coding') ? 'claude-sonnet-4' : 'gpt-5-mini'
      }
    });
  } catch (error) {
    console.error('Chat error:', error.message);
    
    // ‡∏™‡πà‡∏á error message ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á frontend
    res.status(500).json({ 
      error: 'Chat request failed',
      details: error.message,
      suggestions: [
        '‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö',
        '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï',
        '‡πÑ‡∏õ‡∏ó‡∏µ‡πà /chat-debug ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö'
      ]
    });
  }
});

export default router;